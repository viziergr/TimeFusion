# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Serveur virtuel accueillant le site web
  config.vm.define "srv-web", primary: true do |machine|
    machine.vm.hostname = "srv-web"
    machine.vm.box = "chavinje/fr-bull-64"
    machine.vm.network :private_network, ip: "192.168.56.80"
    # Un repertoire partagé est un plus mais demande beaucoup plus
    # de travail - a voir à la fin
    #machine.vm.synced_folder "./data", "/vagrant_data", SharedFoldersEnableSymlinksCreate: false

    machine.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--name", "srv-web"]
      v.customize ["modifyvm", :id, "--groups", "/S7-projet"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--memory", 2*1024]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "off"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "off"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config    
      sleep 3
      service ssh restart
    SHELL
      machine.vm.provision "shell", path: "scripts/install_sys.sh"
      machine.vm.provision "shell", path: "scripts/install_web.sh"
      machine.vm.provision "shell", path: "scripts/install_bdd.sh"
      machine.vm.provision "shell", path: "scripts/install_myadmin.sh"
      machine.vm.provision "shell", path: "scripts/install_site.sh"
      machine.vm.provision "shell", path: "scripts/modif_pass.sh"
  end

  # Serveur virtuel accueillant la base de données
  config.vm.define "srv-bdd" do |machine|
    machine.vm.hostname = "srv-bdd"
    machine.vm.box = "chavinje/fr-bull-64"
    machine.vm.network :private_network, ip: "192.168.56.81"
    # Un repertoire partagé est un plus mais demande beaucoup plus
    # de travail - a voir à la fin
    #machine.vm.synced_folder "./data", "/vagrant_data", SharedFoldersEnableSymlinksCreate: false

    machine.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--name", "srv-bdd"]
      v.customize ["modifyvm", :id, "--groups", "/S7-projet"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--memory", 2*1024]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "off"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "off"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
      sleep 3
      service ssh restart
    SHELL
    machine.vm.provision "shell", path: "scripts/install_sys.sh"
    machine.vm.provision "shell", path: "scripts/install_web.sh"
    machine.vm.provision "shell", path: "scripts/install_bdd.sh"
    # machine.vm.provision "shell", path: "scripts/install_myadmin.sh"
    machine.vm.provision "shell", path: "scripts/linkvm.sh"
    machine.vm.provision "shell", path: "scripts/recup_sql.sh"
    machine.vm.provision "shell", path: "scripts/install_table.sh"
    machine.vm.provision "shell", path: "scripts/modif_pass.sh"
  end

  #  # Serveur virtuel accueillant le reverse proxy
  #  config.vm.define "srv-proxy" do |machine|
  #    machine.vm.hostname = "srv-proxy"
  #    machine.vm.box = "chavinje/fr-bull-64"
  #    machine.vm.network :private_network, ip: "192.168.56.82"
  #    machine.vm.network :public_network, use_dhcp_assigned_default_route: true

  #    machine.vm.provider :virtualbox do |v|
  #      v.customize ["modifyvm", :id, "--name", "srv-proxy"]
  #      v.customize ["modifyvm", :id, "--groups", "/S7-projet"]
  #      v.customize ["modifyvm", :id, "--cpus", "1"]
  #      v.customize ["modifyvm", :id, "--memory", 1024]
  #      v.customize ["modifyvm", :id, "--natdnshostresolver1", "off"]
  #      v.customize ["modifyvm", :id, "--natdnsproxy1", "off"]
  #    end
  #    config.vm.provision "shell", inline: <<-SHELL
  #      sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  #      sleep 3
  #      service ssh restart
  #    SHELL
  #    machine.vm.provision "shell", path: "scripts/install_sys.sh"
  #    machine.vm.provision "shell", path: "scripts/install_web.sh"
  #    machine.vm.provision "shell", path: "scripts/install_proxy.sh"
  #    machine.vm.provision "shell", path: "scripts/install_ssl.sh"
  #    machine.vm.provision "shell", path: "scripts/activation_ssl.sh"
  #  end
end
